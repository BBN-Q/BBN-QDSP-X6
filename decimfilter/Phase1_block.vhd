-- -------------------------------------------------------------
-- 
-- File Name: Q:\Users\Qlab\Documents\Blake\iirfilter\hdlsrc\polyphaseIIR\Phase1_block.vhd
-- Created: 2014-05-09 14:18:25
-- 
-- Generated by MATLAB 8.3 and HDL Coder 3.4
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Phase1_block
-- Source Path: polyphaseIIR/IIRDecimFilter/Stage2/Phase1
-- Hierarchy Level: 2
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY Phase1_block IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb_1_4_0                         :   IN    std_logic;
        Input                             :   IN    std_logic_vector(13 DOWNTO 0);  -- sfix14_En11
        output                            :   OUT   std_logic_vector(13 DOWNTO 0)  -- sfix14_En11
        );
END Phase1_block;


ARCHITECTURE rtl OF Phase1_block IS

  -- Signals
  SIGNAL Input_signed                     : signed(13 DOWNTO 0);  -- sfix14_En11
  SIGNAL Input_1                          : signed(13 DOWNTO 0);  -- sfix14_En11
  SIGNAL delay1_1_1_out1                  : signed(13 DOWNTO 0);  -- sfix14_En11
  SIGNAL delay1_2_2_out1                  : signed(13 DOWNTO 0);  -- sfix14_En11
  SIGNAL densum1_1_1_sub_temp             : signed(14 DOWNTO 0);  -- sfix15_En11
  SIGNAL densum1_1_1_out1                 : signed(13 DOWNTO 0);  -- sfix14_En11
  SIGNAL gain1_1_1_mul_temp               : signed(27 DOWNTO 0);  -- sfix28_En22
  SIGNAL gain1_1_1_out1                   : signed(13 DOWNTO 0);  -- sfix14_En11
  SIGNAL numsum1_1_1_add_temp             : signed(14 DOWNTO 0);  -- sfix15_En11
  SIGNAL numsum1_1_1_out1                 : signed(13 DOWNTO 0);  -- sfix14_En11
  SIGNAL delay1_2_3_out1                  : signed(13 DOWNTO 0);  -- sfix14_En11
  SIGNAL delay1_2_1_out1                  : signed(13 DOWNTO 0);  -- sfix14_En11
  SIGNAL numsum1_2_2_out1                 : signed(13 DOWNTO 0);  -- sfix14_En11
  SIGNAL delay1_3_3_out1                  : signed(13 DOWNTO 0);  -- sfix14_En11
  SIGNAL densum1_2_2_sub_temp             : signed(14 DOWNTO 0);  -- sfix15_En11
  SIGNAL densum1_2_2_out1                 : signed(13 DOWNTO 0);  -- sfix14_En11
  SIGNAL gain1_2_2_mul_temp               : signed(27 DOWNTO 0);  -- sfix28_En22
  SIGNAL gain1_2_2_out1                   : signed(13 DOWNTO 0);  -- sfix14_En11
  SIGNAL numsum1_2_2_add_temp             : signed(14 DOWNTO 0);  -- sfix15_En11
  SIGNAL delay1_2_5_out1                  : signed(13 DOWNTO 0);  -- sfix14_En11
  SIGNAL delay1_2_4_out1                  : signed(13 DOWNTO 0);  -- sfix14_En11
  SIGNAL numsum1_3_3_out1                 : signed(13 DOWNTO 0);  -- sfix14_En11
  SIGNAL delay1_4_4_out1                  : signed(13 DOWNTO 0);  -- sfix14_En11
  SIGNAL densum1_3_3_sub_temp             : signed(14 DOWNTO 0);  -- sfix15_En11
  SIGNAL densum1_3_3_out1                 : signed(13 DOWNTO 0);  -- sfix14_En11
  SIGNAL gain1_3_3_mul_temp               : signed(27 DOWNTO 0);  -- sfix28_En22
  SIGNAL gain1_3_3_out1                   : signed(13 DOWNTO 0);  -- sfix14_En11
  SIGNAL numsum1_3_3_add_temp             : signed(14 DOWNTO 0);  -- sfix15_En11
  SIGNAL numsum1_3_3_out1_1               : signed(13 DOWNTO 0);  -- sfix14_En11

BEGIN
  Input_signed <= signed(Input);

  in_0_pipe_process : PROCESS (clk)
  BEGIN
    IF rising_edge(clk) THEN
      IF reset = '1' THEN
        Input_1 <= to_signed(2#00000000000000#, 14);
      ELSIF enb_1_4_0 = '1' THEN
        Input_1 <= Input_signed;
      END IF;
    END IF;
  END PROCESS in_0_pipe_process;


  delay1_1_1_process : PROCESS (clk)
  BEGIN
    IF rising_edge(clk) THEN
      IF reset = '1' THEN
        delay1_1_1_out1 <= to_signed(2#00000000000000#, 14);
      ELSIF enb_1_4_0 = '1' THEN
        delay1_1_1_out1 <= Input_1;
      END IF;
    END IF;
  END PROCESS delay1_1_1_process;


  densum1_1_1_sub_temp <= (resize(Input_1, 15)) - (resize(delay1_2_2_out1, 15));
  
  densum1_1_1_out1 <= "01111111111111" WHEN (densum1_1_1_sub_temp(14) = '0') AND (densum1_1_1_sub_temp(13) /= '0') ELSE
      "10000000000000" WHEN (densum1_1_1_sub_temp(14) = '1') AND (densum1_1_1_sub_temp(13) /= '1') ELSE
      densum1_1_1_sub_temp(13 DOWNTO 0);

  gain1_1_1_mul_temp <= 239 * densum1_1_1_out1;
  
  gain1_1_1_out1 <= "01111111111111" WHEN ((gain1_1_1_mul_temp(27) = '0') AND (gain1_1_1_mul_temp(26 DOWNTO 24) /= "000")) OR ((gain1_1_1_mul_temp(27) = '0') AND (gain1_1_1_mul_temp(24 DOWNTO 11) = "01111111111111")) ELSE
      "10000000000000" WHEN (gain1_1_1_mul_temp(27) = '1') AND (gain1_1_1_mul_temp(26 DOWNTO 24) /= "111") ELSE
      gain1_1_1_mul_temp(24 DOWNTO 11) + ('0' & gain1_1_1_mul_temp(10));

  numsum1_1_1_add_temp <= (resize(gain1_1_1_out1, 15)) + (resize(delay1_1_1_out1, 15));
  
  numsum1_1_1_out1 <= "01111111111111" WHEN (numsum1_1_1_add_temp(14) = '0') AND (numsum1_1_1_add_temp(13) /= '0') ELSE
      "10000000000000" WHEN (numsum1_1_1_add_temp(14) = '1') AND (numsum1_1_1_add_temp(13) /= '1') ELSE
      numsum1_1_1_add_temp(13 DOWNTO 0);

  delay1_2_2_process : PROCESS (clk)
  BEGIN
    IF rising_edge(clk) THEN
      IF reset = '1' THEN
        delay1_2_2_out1 <= to_signed(2#00000000000000#, 14);
      ELSIF enb_1_4_0 = '1' THEN
        delay1_2_2_out1 <= numsum1_1_1_out1;
      END IF;
    END IF;
  END PROCESS delay1_2_2_process;


  delay1_2_3_process : PROCESS (clk)
  BEGIN
    IF rising_edge(clk) THEN
      IF reset = '1' THEN
        delay1_2_3_out1 <= to_signed(2#00000000000000#, 14);
      ELSIF enb_1_4_0 = '1' THEN
        delay1_2_3_out1 <= delay1_2_2_out1;
      END IF;
    END IF;
  END PROCESS delay1_2_3_process;


  delay1_2_1_process : PROCESS (clk)
  BEGIN
    IF rising_edge(clk) THEN
      IF reset = '1' THEN
        delay1_2_1_out1 <= to_signed(2#00000000000000#, 14);
      ELSIF enb_1_4_0 = '1' THEN
        delay1_2_1_out1 <= numsum1_1_1_out1;
      END IF;
    END IF;
  END PROCESS delay1_2_1_process;


  delay1_3_3_process : PROCESS (clk)
  BEGIN
    IF rising_edge(clk) THEN
      IF reset = '1' THEN
        delay1_3_3_out1 <= to_signed(2#00000000000000#, 14);
      ELSIF enb_1_4_0 = '1' THEN
        delay1_3_3_out1 <= numsum1_2_2_out1;
      END IF;
    END IF;
  END PROCESS delay1_3_3_process;


  densum1_2_2_sub_temp <= (resize(delay1_2_1_out1, 15)) - (resize(delay1_3_3_out1, 15));
  
  densum1_2_2_out1 <= "01111111111111" WHEN (densum1_2_2_sub_temp(14) = '0') AND (densum1_2_2_sub_temp(13) /= '0') ELSE
      "10000000000000" WHEN (densum1_2_2_sub_temp(14) = '1') AND (densum1_2_2_sub_temp(13) /= '1') ELSE
      densum1_2_2_sub_temp(13 DOWNTO 0);

  gain1_2_2_mul_temp <= 1277 * densum1_2_2_out1;
  
  gain1_2_2_out1 <= "01111111111111" WHEN ((gain1_2_2_mul_temp(27) = '0') AND (gain1_2_2_mul_temp(26 DOWNTO 24) /= "000")) OR ((gain1_2_2_mul_temp(27) = '0') AND (gain1_2_2_mul_temp(24 DOWNTO 11) = "01111111111111")) ELSE
      "10000000000000" WHEN (gain1_2_2_mul_temp(27) = '1') AND (gain1_2_2_mul_temp(26 DOWNTO 24) /= "111") ELSE
      gain1_2_2_mul_temp(24 DOWNTO 11) + ('0' & gain1_2_2_mul_temp(10));

  numsum1_2_2_add_temp <= (resize(delay1_2_3_out1, 15)) + (resize(gain1_2_2_out1, 15));
  
  numsum1_2_2_out1 <= "01111111111111" WHEN (numsum1_2_2_add_temp(14) = '0') AND (numsum1_2_2_add_temp(13) /= '0') ELSE
      "10000000000000" WHEN (numsum1_2_2_add_temp(14) = '1') AND (numsum1_2_2_add_temp(13) /= '1') ELSE
      numsum1_2_2_add_temp(13 DOWNTO 0);

  delay1_2_5_process : PROCESS (clk)
  BEGIN
    IF rising_edge(clk) THEN
      IF reset = '1' THEN
        delay1_2_5_out1 <= to_signed(2#00000000000000#, 14);
      ELSIF enb_1_4_0 = '1' THEN
        delay1_2_5_out1 <= numsum1_2_2_out1;
      END IF;
    END IF;
  END PROCESS delay1_2_5_process;


  delay1_2_4_process : PROCESS (clk)
  BEGIN
    IF rising_edge(clk) THEN
      IF reset = '1' THEN
        delay1_2_4_out1 <= to_signed(2#00000000000000#, 14);
      ELSIF enb_1_4_0 = '1' THEN
        delay1_2_4_out1 <= delay1_3_3_out1;
      END IF;
    END IF;
  END PROCESS delay1_2_4_process;


  delay1_4_4_process : PROCESS (clk)
  BEGIN
    IF rising_edge(clk) THEN
      IF reset = '1' THEN
        delay1_4_4_out1 <= to_signed(2#00000000000000#, 14);
      ELSIF enb_1_4_0 = '1' THEN
        delay1_4_4_out1 <= numsum1_3_3_out1;
      END IF;
    END IF;
  END PROCESS delay1_4_4_process;


  densum1_3_3_sub_temp <= (resize(delay1_2_5_out1, 15)) - (resize(delay1_4_4_out1, 15));
  
  densum1_3_3_out1 <= "01111111111111" WHEN (densum1_3_3_sub_temp(14) = '0') AND (densum1_3_3_sub_temp(13) /= '0') ELSE
      "10000000000000" WHEN (densum1_3_3_sub_temp(14) = '1') AND (densum1_3_3_sub_temp(13) /= '1') ELSE
      densum1_3_3_sub_temp(13 DOWNTO 0);

  gain1_3_3_mul_temp <= 1852 * densum1_3_3_out1;
  
  gain1_3_3_out1 <= "01111111111111" WHEN ((gain1_3_3_mul_temp(27) = '0') AND (gain1_3_3_mul_temp(26 DOWNTO 24) /= "000")) OR ((gain1_3_3_mul_temp(27) = '0') AND (gain1_3_3_mul_temp(24 DOWNTO 11) = "01111111111111")) ELSE
      "10000000000000" WHEN (gain1_3_3_mul_temp(27) = '1') AND (gain1_3_3_mul_temp(26 DOWNTO 24) /= "111") ELSE
      gain1_3_3_mul_temp(24 DOWNTO 11) + ('0' & gain1_3_3_mul_temp(10));

  numsum1_3_3_add_temp <= (resize(gain1_3_3_out1, 15)) + (resize(delay1_2_4_out1, 15));
  
  numsum1_3_3_out1 <= "01111111111111" WHEN (numsum1_3_3_add_temp(14) = '0') AND (numsum1_3_3_add_temp(13) /= '0') ELSE
      "10000000000000" WHEN (numsum1_3_3_add_temp(14) = '1') AND (numsum1_3_3_add_temp(13) /= '1') ELSE
      numsum1_3_3_add_temp(13 DOWNTO 0);

  out_0_pipe_process : PROCESS (clk)
  BEGIN
    IF rising_edge(clk) THEN
      IF reset = '1' THEN
        numsum1_3_3_out1_1 <= to_signed(2#00000000000000#, 14);
      ELSIF enb_1_4_0 = '1' THEN
        numsum1_3_3_out1_1 <= numsum1_3_3_out1;
      END IF;
    END IF;
  END PROCESS out_0_pipe_process;


  output <= std_logic_vector(numsum1_3_3_out1_1);

END rtl;

