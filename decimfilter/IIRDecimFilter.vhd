-- -------------------------------------------------------------
-- 
-- File Name: Q:\Users\Qlab\Documents\Blake\iirfilter\hdlsrc\polyphaseIIR\IIRDecimFilter.vhd
-- Created: 2014-05-12 13:26:15
-- 
-- Generated by MATLAB 8.3 and HDL Coder 3.4
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 1
-- Target subsystem base rate: 1
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        4
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- output                        ce_out        4
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: IIRDecimFilter
-- Source Path: polyphaseIIR/IIRDecimFilter
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY IIRDecimFilter IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        input                             :   IN    std_logic_vector(11 DOWNTO 0);  -- sfix12_En11
        ce_out                            :   OUT   std_logic;
        output                            :   OUT   std_logic_vector(14 DOWNTO 0)  -- sfix15_En11
        );
END IIRDecimFilter;


ARCHITECTURE rtl OF IIRDecimFilter IS

  -- Component Declarations
  COMPONENT IIRDecimFilter_tc
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          clk_enable                      :   IN    std_logic;
          enb                             :   OUT   std_logic;
          enb_1_2_0                       :   OUT   std_logic;
          enb_1_2_1                       :   OUT   std_logic;
          enb_1_4_0                       :   OUT   std_logic;
          enb_1_4_1                       :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT Stage1
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          enb_1_2_1                       :   IN    std_logic;
          enb_1_2_0                       :   IN    std_logic;
          Input                           :   IN    std_logic_vector(11 DOWNTO 0);  -- sfix12_En11
          Output                          :   OUT   std_logic_vector(13 DOWNTO 0)  -- sfix14_En11
          );
  END COMPONENT;

  COMPONENT Stage2
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_2_0                       :   IN    std_logic;
          enb_1_4_1                       :   IN    std_logic;
          enb_1_4_0                       :   IN    std_logic;
          Input                           :   IN    std_logic_vector(13 DOWNTO 0);  -- sfix14_En11
          Output                          :   OUT   std_logic_vector(14 DOWNTO 0)  -- sfix15_En11
          );
  END COMPONENT;

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL enb_1_2_1                        : std_logic;
  SIGNAL enb_1_2_0                        : std_logic;
  SIGNAL enb_1_4_1                        : std_logic;
  SIGNAL enb_1_4_0                        : std_logic;
  SIGNAL Stage1_out1                      : std_logic_vector(13 DOWNTO 0);  -- ufix14
  SIGNAL Stage2_out1                      : std_logic_vector(14 DOWNTO 0);  -- ufix15

BEGIN
  -- RATE:
  -- RED      260MHz
  -- GREEN 130MHz
  -- BLUE       65MHz

  u_IIRDecimFilter_tc : IIRDecimFilter_tc
    PORT MAP( clk => clk,
              reset => reset,
              clk_enable => clk_enable,
              enb => enb,
              enb_1_2_0 => enb_1_2_0,
              enb_1_2_1 => enb_1_2_1,
              enb_1_4_0 => enb_1_4_0,
              enb_1_4_1 => enb_1_4_1
              );

  u_Stage1 : Stage1
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              enb_1_2_1 => enb_1_2_1,
              enb_1_2_0 => enb_1_2_0,
              Input => input,  -- sfix12_En11
              Output => Stage1_out1  -- sfix14_En11
              );

  u_Stage2 : Stage2
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_2_0 => enb_1_2_0,
              enb_1_4_1 => enb_1_4_1,
              enb_1_4_0 => enb_1_4_0,
              Input => Stage1_out1,  -- sfix14_En11
              Output => Stage2_out1  -- sfix15_En11
              );

  ce_out <= enb_1_4_1;

  output <= Stage2_out1;

END rtl;

