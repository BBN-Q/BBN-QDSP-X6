-- -------------------------------------------------------------
-- 
-- File Name: Q:\Users\Qlab\Documents\Blake\iirfilter\hdlsrc\polyphaseIIR\Phase2.vhd
-- Created: 2014-05-09 14:18:25
-- 
-- Generated by MATLAB 8.3 and HDL Coder 3.4
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Phase2
-- Source Path: polyphaseIIR/IIRDecimFilter/Stage1/Phase2
-- Hierarchy Level: 2
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY Phase2 IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb_1_2_0                         :   IN    std_logic;
        Input                             :   IN    std_logic_vector(11 DOWNTO 0);  -- sfix12_En11
        output                            :   OUT   std_logic_vector(12 DOWNTO 0)  -- sfix13_En11
        );
END Phase2;


ARCHITECTURE rtl OF Phase2 IS

  -- Signals
  SIGNAL Input_signed                     : signed(11 DOWNTO 0);  -- sfix12_En11
  SIGNAL Input_1                          : signed(11 DOWNTO 0);  -- sfix12_En11
  SIGNAL delay1_1_1_out1                  : signed(11 DOWNTO 0);  -- sfix12_En11
  SIGNAL numsum1_1_1_out1                 : signed(12 DOWNTO 0);  -- sfix13_En11
  SIGNAL delay1_2_2_out1                  : signed(12 DOWNTO 0);  -- sfix13_En11
  SIGNAL densum1_1_1_sub_temp             : signed(13 DOWNTO 0);  -- sfix14_En11
  SIGNAL densum1_1_1_out1                 : signed(11 DOWNTO 0);  -- sfix12_En11
  SIGNAL gain1_1_1_mul_temp               : signed(23 DOWNTO 0);  -- sfix24_En22
  SIGNAL gain1_1_1_out1                   : signed(11 DOWNTO 0);  -- sfix12_En11
  SIGNAL numsum1_1_1_out1_1               : signed(12 DOWNTO 0);  -- sfix13_En11

BEGIN
  Input_signed <= signed(Input);

  in_0_pipe_process : PROCESS (clk)
  BEGIN
    IF rising_edge(clk) THEN
      IF reset = '1' THEN
        Input_1 <= to_signed(2#000000000000#, 12);
      ELSIF enb_1_2_0 = '1' THEN
        Input_1 <= Input_signed;
      END IF;
    END IF;
  END PROCESS in_0_pipe_process;


  delay1_1_1_process : PROCESS (clk)
  BEGIN
    IF rising_edge(clk) THEN
      IF reset = '1' THEN
        delay1_1_1_out1 <= to_signed(2#000000000000#, 12);
      ELSIF enb_1_2_0 = '1' THEN
        delay1_1_1_out1 <= Input_1;
      END IF;
    END IF;
  END PROCESS delay1_1_1_process;


  delay1_2_2_process : PROCESS (clk)
  BEGIN
    IF rising_edge(clk) THEN
      IF reset = '1' THEN
        delay1_2_2_out1 <= to_signed(2#0000000000000#, 13);
      ELSIF enb_1_2_0 = '1' THEN
        delay1_2_2_out1 <= numsum1_1_1_out1;
      END IF;
    END IF;
  END PROCESS delay1_2_2_process;


  densum1_1_1_sub_temp <= (resize(Input_1, 14)) - (resize(delay1_2_2_out1, 14));
  densum1_1_1_out1 <= densum1_1_1_sub_temp(11 DOWNTO 0);

  gain1_1_1_mul_temp <= 1204 * densum1_1_1_out1;
  gain1_1_1_out1 <= gain1_1_1_mul_temp(22 DOWNTO 11);

  numsum1_1_1_out1 <= (resize(gain1_1_1_out1, 13)) + (resize(delay1_1_1_out1, 13));

  out_0_pipe_process : PROCESS (clk)
  BEGIN
    IF rising_edge(clk) THEN
      IF reset = '1' THEN
        numsum1_1_1_out1_1 <= to_signed(2#0000000000000#, 13);
      ELSIF enb_1_2_0 = '1' THEN
        numsum1_1_1_out1_1 <= numsum1_1_1_out1;
      END IF;
    END IF;
  END PROCESS out_0_pipe_process;


  output <= std_logic_vector(numsum1_1_1_out1_1);

END rtl;

