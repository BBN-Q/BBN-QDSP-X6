-- -------------------------------------------------------------
-- 
-- File Name: Q:\Users\Qlab\Documents\Blake\basic_fir_decimator\hdlsrc\polyphaseFIR\PolyphaseFIR.vhd
-- Created: 2014-05-12 22:55:35
-- 
-- Generated by MATLAB 8.3 and HDL Coder 3.4
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 1
-- Target subsystem base rate: 1
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        4
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- Out1                          ce_out        4
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: PolyphaseFIR
-- Source Path: polyphaseFIR/PolyphaseFIR
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY PolyphaseFIR IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        In1                               :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        ce_out                            :   OUT   std_logic;
        Out1                              :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En14
        );
END PolyphaseFIR;


ARCHITECTURE rtl OF PolyphaseFIR IS

  -- Component Declarations
  COMPONENT PolyphaseFIR_tc
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          clk_enable                      :   IN    std_logic;
          enb                             :   OUT   std_logic;
          enb_1_1_1                       :   OUT   std_logic;
          enb_1_4_1                       :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT FIR_Decimation
    PORT( clk                             :   IN    std_logic;
          enb_1_1_1                       :   IN    std_logic;
          reset                           :   IN    std_logic;
          FIR_Decimation_in               :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          FIR_Decimation_out              :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En14
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : PolyphaseFIR_tc
    USE ENTITY work.PolyphaseFIR_tc(rtl);

  FOR ALL : FIR_Decimation
    USE ENTITY work.FIR_Decimation(rtl);

  -- Signals
  SIGNAL enb_1_1_1                        : std_logic;
  SIGNAL enb                              : std_logic;
  SIGNAL enb_1_4_1                        : std_logic;
  SIGNAL In1_signed                       : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL In1_1                            : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL In1_2                            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL FIR_Decimation_out1              : std_logic_vector(15 DOWNTO 0);  -- ufix16

BEGIN
  u_PolyphaseFIR_tc : PolyphaseFIR_tc
    PORT MAP( clk => clk,
              reset => reset,
              clk_enable => clk_enable,
              enb => enb,
              enb_1_1_1 => enb_1_1_1,
              enb_1_4_1 => enb_1_4_1
              );

  u_FIR_Decimation : FIR_Decimation
    PORT MAP( clk => clk,
              enb_1_1_1 => enb_1_1_1,
              reset => reset,
              FIR_Decimation_in => In1_2,  -- sfix16_En15
              FIR_Decimation_out => FIR_Decimation_out1  -- sfix16_En14
              );

  In1_signed <= signed(In1);

  FIR_Decimation_in_pipe_process : PROCESS (clk)
  BEGIN
    IF rising_edge(clk) THEN
      IF reset = '1' THEN
        In1_1 <= to_signed(16#0000#, 16);
      ELSIF enb = '1' THEN
        In1_1 <= In1_signed;
      END IF;
    END IF;
  END PROCESS FIR_Decimation_in_pipe_process;


  In1_2 <= std_logic_vector(In1_1);

  ce_out <= enb_1_4_1;

  Out1 <= FIR_Decimation_out1;

END rtl;

